generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 以下為資料表定義
model Blog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  content   String?
  published Boolean  @default(false)
}

model TimeLog {
  id        Int       @id @default(autoincrement())
  title     String
  startTime DateTime  @map("start_time")
  endTime   DateTime? @map("end_time")
  userId    Int?      @map("user_id")
  memo      String?   // 新增備註欄位，用於使用者反思
  steps     Step[]
  user      User?     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
}

model Step {
  id          Int       @id @default(autoincrement())
  timeLogId   Int       @map("time_log_id")
  userId      Int?      @map("user_id")
  title       String
  description String?
  startTime   DateTime  @map("start_time")
  endTime     DateTime? @map("end_time")
  timeLog     TimeLog   @relation(fields: [timeLogId], references: [id], onDelete: Cascade)
  user        User?     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  img      String?
  info     String
  products Product[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  parentId Int?      @map("parent_id")
  products Product[]
}

model Favorite {
  userId    Int     @map("user_id")
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [user_id])

  @@id([userId, productId])
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  token     String
  hash      String?
  createdAt DateTime @default(now()) @map("created_at")
  expiredAt DateTime @map("expired_at")
}

model Product {
  id         Int        @id @default(autoincrement())
  name       String
  sn         String     @unique
  photos     String?
  stock      Int        @default(0)
  price      Int        @default(0)
  info       String
  brandId    Int        @map("brand_id")
  categoryId Int        @map("category_id")
  favorites  Favorite[]
  brand      Brand      @relation(fields: [brandId], references: [id])
  category   Category   @relation(fields: [categoryId], references: [id])
}

model User {
  user_id         Int            @id @default(autoincrement())
  name            String?
  password        String
  email           String         @unique
  phone           String?
  birthdate       DateTime?
  gender          String?
  avatar          String?
  level           Int            @default(0) // 0: 未付費, 1: 已付費
  current_log_count Int          @default(0) @map("current_log_count") // 當前活動記錄數量，用於快速檢查限制

  // 付費狀態欄位
  paid            Boolean        @default(false) // 是否已付費
  paid_date       DateTime?      @map("paid_date") // 最近一次付款時間
  due_date        DateTime?      @map("due_date") // 付費到期時間

  valid           Boolean        @default(true)
  createdAt       DateTime       @default(now()) @map("created_at")
  googleUid       String?        @unique @map("google_uid")
  lineUid         String?        @unique @map("line_uid")
  lineAccessToken String?
  refreshToken    String?
  iat             String?
  exp             String?
  favorites       Favorite[]
  steps           Step[]
  timeLogs        TimeLog[]
  paymentOrders   PaymentOrder[]
  // subscriptions 已合併到 PaymentOrder 表中
}

model PaymentOrder {
  id              String    @id @default(cuid())
  orderId         String    @unique // 系統內部訂單號
  userId          Int?      @map("user_id") // 關聯用戶
  amount          Int       // 訂單總金額
  currency        String    @default("TWD") // 貨幣
  status          String    @default("PENDING") // 支付狀態: PENDING, SUCCESS, FAILED, CANCELLED

  // LINE Pay 相關資訊（簡化版）
  transactionId   String?   @unique @map("transaction_id") // LINE Pay 交易 ID（必要，用於確認付款）

  // 訂單詳情
  packages        Json      // 訂單商品詳情，以 JSON 格式存儲
  redirectUrls    Json?     @map("redirect_urls") // 重定向 URL 設定

  // 訂閱相關欄位（合併自 Subscription 表）
  paidAt          DateTime? @map("paid_at") // 付款時間
  dueAt           DateTime? @map("due_at") // 到期時間（自動計算：下個月同一天）
  subscriptionStatus String? @default("ACTIVE") @map("subscription_status") // 訂閱狀態: ACTIVE, EXPIRED, CANCELLED
  isCurrent       Boolean   @default(true) @map("is_current") // 是否為當前有效訂閱

  // 時間戳
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  // 關聯
  user            User?     @relation(fields: [userId], references: [user_id], onDelete: SetNull)

  @@index([userId, isCurrent]) // 索引：用戶ID + 是否當前訂閱
  @@index([dueAt]) // 索引：到期時間，用於查詢過期訂閱
}

// Subscription 表已合併到 PaymentOrder 表中
// 現在 PaymentOrder 同時處理付款和訂閱功能
