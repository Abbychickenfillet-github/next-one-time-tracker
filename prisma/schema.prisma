generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 以下為資料表定義
model Blog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  content   String?
  published Boolean  @default(false)
}

model TimeLog {
  id        Int       @id @default(autoincrement())
  title     String
  startTime DateTime  @map("start_time")
  endTime   DateTime? @map("end_time")
  userId    Int?      @map("user_id")
  steps     Step[]
  user      User?     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
}

model Step {
  id          Int       @id @default(autoincrement())
  timeLogId   Int       @map("time_log_id")
  userId      Int?      @map("user_id")
  title       String
  description String?
  startTime   DateTime  @map("start_time")
  endTime     DateTime? @map("end_time")
  timeLog     TimeLog   @relation(fields: [timeLogId], references: [id], onDelete: Cascade)
  user        User?     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  img      String?
  info     String
  products Product[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  parentId Int?      @map("parent_id")
  products Product[]
}

model Favorite {
  userId    Int     @map("user_id")
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [user_id])

  @@id([userId, productId])
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  token     String
  hash      String?
  createdAt DateTime @default(now()) @map("created_at")
  expiredAt DateTime @map("expired_at")
}

model Product {
  id         Int        @id @default(autoincrement())
  name       String
  sn         String     @unique
  photos     String?
  stock      Int        @default(0)
  price      Int        @default(0)
  info       String
  brandId    Int        @map("brand_id")
  categoryId Int        @map("category_id")
  favorites  Favorite[]
  brand      Brand      @relation(fields: [brandId], references: [id])
  category   Category   @relation(fields: [categoryId], references: [id])
}

model User {
  user_id         Int        @id @default(autoincrement())
  name            String?
  password        String
  email           String     @unique
  phone           String?
  birthdate       DateTime?
  gender          String?
  avatar          String?
  level           Int        @default(0)
  valid           Boolean    @default(true)
  createdAt       DateTime   @default(now()) @map("created_at")
  googleUid       String?    @unique @map("google_uid")
  lineUid         String?    @unique @map("line_uid")
  lineAccessToken String?
  refreshToken    String?
  iat             String?
  exp             String?
  favorites       Favorite[]
  steps           Step[]
  timeLogs        TimeLog[]
}
