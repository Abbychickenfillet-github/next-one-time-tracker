generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 以下為資料表定義
model Blog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz
  title     String
  content   String?
  published Boolean  @default(false)
}

model TimeLog {
  id        Int       @id @default(autoincrement())
  title     String
  startTime DateTime  @map("start_time") @db.Timestamptz
  endTime   DateTime  @map("end_time") @db.Timestamptz
  userId    Int?      @map("user_id")
  memo      String?
  steps     Step[]
  user      User?     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
}

model Step {
  id          Int       @id @default(autoincrement())
  timeLogId   Int       @map("time_log_id")
  userId      Int?      @map("user_id")
  title       String
  description String?
  startTime   DateTime  @map("start_time") @db.Timestamptz
  endTime     DateTime? @map("end_time") @db.Timestamptz
  timeLog     TimeLog   @relation(fields: [timeLogId], references: [id], onDelete: Cascade)
  user        User?     @relation(fields: [userId], references: [user_id], onDelete: Cascade)
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  token     String
  hash      String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  expiredAt DateTime @map("expired_at") @db.Timestamptz
}

model User {
  user_id           Int            @id @default(autoincrement())
  name              String?
  password          String
  email             String         @unique
  phone             String?
  birthdate         DateTime?      @db.Timestamptz
  gender            String?
  avatar            String?
  level             Int            @default(0)
  valid             Boolean        @default(true)
  createdAt         DateTime       @default(now()) @map("created_at") @db.Timestamptz
  googleUid         String?        @unique @map("google_uid")
  lineUid           String?        @unique @map("line_uid")
  lineAccessToken   String?
  refreshToken      String?
  iat               String?
  exp               String?
  current_log_count Int            @default(0) @map("current_log_count")
  due_date          DateTime?      @map("due_date") @db.Timestamptz
  paid              Boolean        @default(false)
  paid_date         DateTime?      @map("paid_date") @db.Timestamptz
  paymentOrders     PaymentOrder[]
  steps             Step[]
  timeLogs          TimeLog[]
}

model PaymentOrder {
  id                 Int       @id @default(autoincrement())
  orderId            String    @unique
  userId             Int?      @map("user_id")
  amount             Int
  currency           String    @default("TWD")
  status             String    @default("PENDING")
  transactionId      String?   @unique @map("transaction_id")
  packages           Json
  redirectUrls       Json?     @map("redirect_urls")
  createdAt          DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt          DateTime? @updatedAt @map("updated_at") @db.Timestamptz
  dueAt              DateTime  @map("due_at") @db.Timestamptz
  isCurrent          Boolean   @default(true) @map("is_current")
  paidAt             DateTime  @map("paid_at") @db.Timestamptz
  subscriptionStatus String?   @default("ACTIVE") @map("subscription_status")
  user               User?     @relation(fields: [userId], references: [user_id])

  @@index([userId, isCurrent]) // 索引：用戶ID + 是否當前訂閱
  @@index([dueAt]) // 索引：到期時間，用於查詢過期訂閱
}
